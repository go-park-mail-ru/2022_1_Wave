// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: artist/artistProto/artist.proto

package artistProto

import (
	albumProto "github.com/go-park-mail-ru/2022_1_Wave/internal/microservices/album/albumProto"
	gatewayProto "github.com/go-park-mail-ru/2022_1_Wave/internal/microservices/gateway/gatewayProto"
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Artist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id" example:"6" db:"id" validate:"min=0,nonnil"`                                                  // @gotags: json:"id" example:"6" db:"id" validate:"min=0,nonnil"
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" example:"Imagine Dragons" db:"name" validate:"max=256,nonnil"`                                               // @gotags: json:"name" example:"Imagine Dragons" db:"name" validate:"max=256,nonnil"
	CountLikes      int64  `protobuf:"varint,3,opt,name=count_likes,json=countLikes,proto3" json:"countLikes" example:"54" db:"count_likes" validate:"min=0,nonnil"`                // @gotags: json:"countLikes" example:"54" db:"count_likes" validate:"min=0,nonnil"
	CountFollowers  int64  `protobuf:"varint,4,opt,name=count_followers,json=countFollowers,proto3" json:"countFollowers" example:"1001" db:"count_followers" validate:"min=0,nonnil"`    // @gotags: json:"countFollowers" example:"1001" db:"count_followers" validate:"min=0,nonnil"
	CountListenings int64  `protobuf:"varint,5,opt,name=count_listenings,json=countListenings,proto3" json:"countListening" example:"7654" db:"count_listening" validate:"min=0,nonnil"` // @gotags: json:"countListening" example:"7654" db:"count_listening" validate:"min=0,nonnil"
}

func (x *Artist) Reset() {
	*x = Artist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artistProto_artist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Artist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artist) ProtoMessage() {}

func (x *Artist) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artistProto_artist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artist.ProtoReflect.Descriptor instead.
func (*Artist) Descriptor() ([]byte, []int) {
	return file_artist_artistProto_artist_proto_rawDescGZIP(), []int{0}
}

func (x *Artist) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Artist) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Artist) GetCountLikes() int64 {
	if x != nil {
		return x.CountLikes
	}
	return 0
}

func (x *Artist) GetCountFollowers() int64 {
	if x != nil {
		return x.CountFollowers
	}
	return 0
}

func (x *Artist) GetCountListenings() int64 {
	if x != nil {
		return x.CountListenings
	}
	return 0
}

type ArtistDataTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64                           `protobuf:"varint,1,opt,name=id,proto3" json:"id" example:"1"`        // @gotags: json:"id" example:"1"
	Name   string                          `protobuf:"bytes,2,opt,name=name,proto3" json:"name" example:"Mercury"`     // @gotags: json:"name" example:"Mercury"
	Cover  string                          `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover" example:"assets/artist_1.png"`   // @gotags: json:"cover" example:"assets/artist_1.png"
	Likes  int64                           `protobuf:"varint,4,opt,name=likes,proto3" json:"likes" example:"5"`  // @gotags: json:"likes" example:"5"
	Albums []*albumProto.AlbumDataTransfer `protobuf:"bytes,5,rep,name=Albums,proto3" json:"albums"` // @gotags: json:"albums"
}

func (x *ArtistDataTransfer) Reset() {
	*x = ArtistDataTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artistProto_artist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistDataTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistDataTransfer) ProtoMessage() {}

func (x *ArtistDataTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artistProto_artist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistDataTransfer.ProtoReflect.Descriptor instead.
func (*ArtistDataTransfer) Descriptor() ([]byte, []int) {
	return file_artist_artistProto_artist_proto_rawDescGZIP(), []int{1}
}

func (x *ArtistDataTransfer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArtistDataTransfer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArtistDataTransfer) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ArtistDataTransfer) GetLikes() int64 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *ArtistDataTransfer) GetAlbums() []*albumProto.AlbumDataTransfer {
	if x != nil {
		return x.Albums
	}
	return nil
}

type ArtistUseCaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ArtistDataTransfer `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ArtistUseCaseResponse) Reset() {
	*x = ArtistUseCaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artistProto_artist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistUseCaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistUseCaseResponse) ProtoMessage() {}

func (x *ArtistUseCaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artistProto_artist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistUseCaseResponse.ProtoReflect.Descriptor instead.
func (*ArtistUseCaseResponse) Descriptor() ([]byte, []int) {
	return file_artist_artistProto_artist_proto_rawDescGZIP(), []int{2}
}

func (x *ArtistUseCaseResponse) GetData() *ArtistDataTransfer {
	if x != nil {
		return x.Data
	}
	return nil
}

type ArtistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artists []*ArtistDataTransfer `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
}

func (x *ArtistsResponse) Reset() {
	*x = ArtistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artistProto_artist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistsResponse) ProtoMessage() {}

func (x *ArtistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artistProto_artist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistsResponse.ProtoReflect.Descriptor instead.
func (*ArtistsResponse) Descriptor() ([]byte, []int) {
	return file_artist_artistProto_artist_proto_rawDescGZIP(), []int{3}
}

func (x *ArtistsResponse) GetArtists() []*ArtistDataTransfer {
	if x != nil {
		return x.Artists
	}
	return nil
}

var File_artist_artistProto_artist_proto protoreflect.FileDescriptor

var file_artist_artistProto_artist_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x2f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6c, 0x62, 0x75,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x06, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x12,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6b,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x06, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x73, 0x22, 0x46, 0x0a, 0x15, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x0f,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x07, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x73, 0x32, 0xe2, 0x05, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x43, 0x61, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x31, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x31, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x0e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x49, 0x64, 0x41, 0x72, 0x67, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x49,
	0x64, 0x41, 0x72, 0x67, 0x1a, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x49,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0c,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x67,
	0x1a, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x0e, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x49, 0x64, 0x41, 0x72, 0x67, 0x1a, 0x16, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x64, 0x41,
	0x72, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x13,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x64, 0x41, 0x72, 0x67, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x52, 0x5a, 0x50, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x61, 0x72, 0x6b, 0x2d,
	0x6d, 0x61, 0x69, 0x6c, 0x2d, 0x72, 0x75, 0x2f, 0x32, 0x30, 0x32, 0x32, 0x5f, 0x31, 0x5f, 0x57,
	0x61, 0x76, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_artist_artistProto_artist_proto_rawDescOnce sync.Once
	file_artist_artistProto_artist_proto_rawDescData = file_artist_artistProto_artist_proto_rawDesc
)

func file_artist_artistProto_artist_proto_rawDescGZIP() []byte {
	file_artist_artistProto_artist_proto_rawDescOnce.Do(func() {
		file_artist_artistProto_artist_proto_rawDescData = protoimpl.X.CompressGZIP(file_artist_artistProto_artist_proto_rawDescData)
	})
	return file_artist_artistProto_artist_proto_rawDescData
}

var file_artist_artistProto_artist_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_artist_artistProto_artist_proto_goTypes = []interface{}{
	(*Artist)(nil),                         // 0: track.Artist
	(*ArtistDataTransfer)(nil),             // 1: track.ArtistDataTransfer
	(*ArtistUseCaseResponse)(nil),          // 2: track.ArtistUseCaseResponse
	(*ArtistsResponse)(nil),                // 3: track.ArtistsResponse
	(*albumProto.AlbumDataTransfer)(nil),   // 4: album.AlbumDataTransfer
	(*empty.Empty)(nil),                    // 5: google.protobuf.Empty
	(*gatewayProto.IdArg)(nil),             // 6: gateway.IdArg
	(*gatewayProto.StringArg)(nil),         // 7: gateway.StringArg
	(*gatewayProto.UserIdArtistIdArg)(nil), // 8: gateway.UserIdArtistIdArg
	(*gatewayProto.IntResponse)(nil),       // 9: gateway.IntResponse
}
var file_artist_artistProto_artist_proto_depIdxs = []int32{
	4,  // 0: track.ArtistDataTransfer.Albums:type_name -> album.AlbumDataTransfer
	1,  // 1: track.ArtistUseCaseResponse.data:type_name -> track.ArtistDataTransfer
	1,  // 2: track.ArtistsResponse.artists:type_name -> track.ArtistDataTransfer
	5,  // 3: track.ArtistUseCase.GetAll:input_type -> google.protobuf.Empty
	5,  // 4: track.ArtistUseCase.GetLastId:input_type -> google.protobuf.Empty
	0,  // 5: track.ArtistUseCase.Create:input_type -> track.Artist
	0,  // 6: track.ArtistUseCase.Update:input_type -> track.Artist
	6,  // 7: track.ArtistUseCase.Delete:input_type -> gateway.IdArg
	6,  // 8: track.ArtistUseCase.GetById:input_type -> gateway.IdArg
	5,  // 9: track.ArtistUseCase.GetPopular:input_type -> google.protobuf.Empty
	5,  // 10: track.ArtistUseCase.GetSize:input_type -> google.protobuf.Empty
	7,  // 11: track.ArtistUseCase.SearchByName:input_type -> gateway.StringArg
	6,  // 12: track.ArtistUseCase.GetFavorites:input_type -> gateway.IdArg
	8,  // 13: track.ArtistUseCase.AddToFavorites:input_type -> gateway.UserIdArtistIdArg
	8,  // 14: track.ArtistUseCase.RemoveFromFavorites:input_type -> gateway.UserIdArtistIdArg
	3,  // 15: track.ArtistUseCase.GetAll:output_type -> track.ArtistsResponse
	9,  // 16: track.ArtistUseCase.GetLastId:output_type -> gateway.IntResponse
	5,  // 17: track.ArtistUseCase.Create:output_type -> google.protobuf.Empty
	5,  // 18: track.ArtistUseCase.Update:output_type -> google.protobuf.Empty
	5,  // 19: track.ArtistUseCase.Delete:output_type -> google.protobuf.Empty
	1,  // 20: track.ArtistUseCase.GetById:output_type -> track.ArtistDataTransfer
	3,  // 21: track.ArtistUseCase.GetPopular:output_type -> track.ArtistsResponse
	9,  // 22: track.ArtistUseCase.GetSize:output_type -> gateway.IntResponse
	3,  // 23: track.ArtistUseCase.SearchByName:output_type -> track.ArtistsResponse
	3,  // 24: track.ArtistUseCase.GetFavorites:output_type -> track.ArtistsResponse
	5,  // 25: track.ArtistUseCase.AddToFavorites:output_type -> google.protobuf.Empty
	5,  // 26: track.ArtistUseCase.RemoveFromFavorites:output_type -> google.protobuf.Empty
	15, // [15:27] is the sub-list for method output_type
	3,  // [3:15] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_artist_artistProto_artist_proto_init() }
func file_artist_artistProto_artist_proto_init() {
	if File_artist_artistProto_artist_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_artist_artistProto_artist_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Artist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artistProto_artist_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistDataTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artistProto_artist_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistUseCaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artistProto_artist_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_artist_artistProto_artist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_artist_artistProto_artist_proto_goTypes,
		DependencyIndexes: file_artist_artistProto_artist_proto_depIdxs,
		MessageInfos:      file_artist_artistProto_artist_proto_msgTypes,
	}.Build()
	File_artist_artistProto_artist_proto = out.File
	file_artist_artistProto_artist_proto_rawDesc = nil
	file_artist_artistProto_artist_proto_goTypes = nil
	file_artist_artistProto_artist_proto_depIdxs = nil
}
