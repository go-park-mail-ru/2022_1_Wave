syntax = "proto3";
package playlist;
option go_package = "github.com/go-park-mail-ru/2022_1_Wave/internal/microservices/playlist/playlistProto";
import "google/protobuf/empty.proto";
import "gateway/gatewayProto/gateway.proto";
import "track/trackProto/track.proto";

message Playlist {
  int64 id = 1; // @gotags: json:"id" example:"4" db:"id" validate:"min=0"
  string title = 2; // @gotags: json:"title" example:"Rain" db:"title" validate:"max=256,nonnil"
  repeated int64 tracks_id = 3; // @gotags: json:"tracks_id" db:"tracks_id"
}

message PlaylistDataTransfer {
  int64 id = 1; // @gotags: json:"id" example:"4"
  string title = 2; // @gotags: json:"title" example:"Rain"
  repeated track.TrackDataTransfer tracks = 3;
}

message PlaylistUseCaseResponse {
  PlaylistDataTransfer data = 1;
}

message PlaylistsResponse {
  repeated PlaylistDataTransfer playlists = 1;
}

message UserIdPlaylistArg {
  int64 userId = 1;
  Playlist playlist = 2;
}

message UserIdPlaylistIdArg {
  int64 userId = 1;
  int64 playlistId = 2;
}

service PlaylistUseCase {
  rpc GetAll(gateway.IdArg) returns (PlaylistsResponse) {};
  rpc GetLastId(gateway.IdArg) returns (gateway.IntResponse) {};
  rpc Create(UserIdPlaylistArg) returns (google.protobuf.Empty) {};
  rpc Update(UserIdPlaylistArg) returns (google.protobuf.Empty) {};
  rpc Delete(UserIdPlaylistIdArg) returns (google.protobuf.Empty) {};
  rpc GetById(UserIdPlaylistIdArg) returns (PlaylistDataTransfer) {};
  rpc GetSize(gateway.IdArg) returns (gateway.IntResponse) {};
}