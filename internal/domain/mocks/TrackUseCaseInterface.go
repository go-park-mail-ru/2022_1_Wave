// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	domain "github.com/go-park-mail-ru/2022_1_Wave/internal/app/domain"
	mock "github.com/stretchr/testify/mock"
)

// TrackUseCaseInterface is an autogenerated mock type for the TrackUseCaseInterface type
type TrackUseCaseInterface struct {
	mock.Mock
}

// CastToDTO provides a mock function with given fields: track
func (_m *TrackUseCaseInterface) CastToDTO(track domain.Track) (*domain.TrackDataTransfer, error) {
	ret := _m.Called(track)

	var r0 *domain.TrackDataTransfer
	if rf, ok := ret.Get(0).(func(domain.Track) *domain.TrackDataTransfer); ok {
		r0 = rf(track)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.TrackDataTransfer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(domain.Track) error); ok {
		r1 = rf(track)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Create provides a mock function with given fields: dom
func (_m *TrackUseCaseInterface) Create(dom domain.Track) error {
	ret := _m.Called(dom)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.Track) error); ok {
		r0 = rf(dom)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: id
func (_m *TrackUseCaseInterface) Delete(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAll provides a mock function with given fields:
func (_m *TrackUseCaseInterface) GetAll() ([]domain.TrackDataTransfer, error) {
	ret := _m.Called()

	var r0 []domain.TrackDataTransfer
	if rf, ok := ret.Get(0).(func() []domain.TrackDataTransfer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.TrackDataTransfer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetById provides a mock function with given fields: id
func (_m *TrackUseCaseInterface) GetById(id int) (*domain.TrackDataTransfer, error) {
	ret := _m.Called(id)

	var r0 *domain.TrackDataTransfer
	if rf, ok := ret.Get(0).(func(int) *domain.TrackDataTransfer); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.TrackDataTransfer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLastId provides a mock function with given fields:
func (_m *TrackUseCaseInterface) GetLastId() (int, error) {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPopular provides a mock function with given fields:
func (_m *TrackUseCaseInterface) GetPopular() ([]domain.TrackDataTransfer, error) {
	ret := _m.Called()

	var r0 []domain.TrackDataTransfer
	if rf, ok := ret.Get(0).(func() []domain.TrackDataTransfer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.TrackDataTransfer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPopularTracksFromArtist provides a mock function with given fields: artistId
func (_m *TrackUseCaseInterface) GetPopularTracksFromArtist(artistId int) ([]domain.TrackDataTransfer, error) {
	ret := _m.Called(artistId)

	var r0 []domain.TrackDataTransfer
	if rf, ok := ret.Get(0).(func(int) []domain.TrackDataTransfer); ok {
		r0 = rf(artistId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.TrackDataTransfer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(artistId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSize provides a mock function with given fields:
func (_m *TrackUseCaseInterface) GetSize() (int, error) {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTracksFromAlbum provides a mock function with given fields: albumId
func (_m *TrackUseCaseInterface) GetTracksFromAlbum(albumId int) ([]domain.TrackDataTransfer, error) {
	ret := _m.Called(albumId)

	var r0 []domain.TrackDataTransfer
	if rf, ok := ret.Get(0).(func(int) []domain.TrackDataTransfer); ok {
		r0 = rf(albumId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.TrackDataTransfer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(albumId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: dom
func (_m *TrackUseCaseInterface) Update(dom domain.Track) error {
	ret := _m.Called(dom)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.Track) error); ok {
		r0 = rf(dom)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
