// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	gatewayProto "github.com/go-park-mail-ru/2022_1_Wave/internal/microservices/gateway/gatewayProto"
	mock "github.com/stretchr/testify/mock"

	playlistProto "github.com/go-park-mail-ru/2022_1_Wave/internal/microservices/playlist/playlistProto"
)

// PlaylistAgent is an autogenerated mock type for the PlaylistAgent type
type PlaylistAgent struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *PlaylistAgent) Create(_a0 *playlistProto.UserIdPlaylistArg) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*playlistProto.UserIdPlaylistArg) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: _a0
func (_m *PlaylistAgent) Delete(_a0 *playlistProto.UserIdPlaylistIdArg) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*playlistProto.UserIdPlaylistIdArg) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAll provides a mock function with given fields: _a0
func (_m *PlaylistAgent) GetAll(_a0 *gatewayProto.IdArg) (*playlistProto.PlaylistsResponse, error) {
	ret := _m.Called(_a0)

	var r0 *playlistProto.PlaylistsResponse
	if rf, ok := ret.Get(0).(func(*gatewayProto.IdArg) *playlistProto.PlaylistsResponse); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*playlistProto.PlaylistsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*gatewayProto.IdArg) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetById provides a mock function with given fields: _a0
func (_m *PlaylistAgent) GetById(_a0 *playlistProto.UserIdPlaylistIdArg) (*playlistProto.PlaylistDataTransfer, error) {
	ret := _m.Called(_a0)

	var r0 *playlistProto.PlaylistDataTransfer
	if rf, ok := ret.Get(0).(func(*playlistProto.UserIdPlaylistIdArg) *playlistProto.PlaylistDataTransfer); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*playlistProto.PlaylistDataTransfer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*playlistProto.UserIdPlaylistIdArg) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLastId provides a mock function with given fields: _a0
func (_m *PlaylistAgent) GetLastId(_a0 *gatewayProto.IdArg) (*gatewayProto.IntResponse, error) {
	ret := _m.Called(_a0)

	var r0 *gatewayProto.IntResponse
	if rf, ok := ret.Get(0).(func(*gatewayProto.IdArg) *gatewayProto.IntResponse); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gatewayProto.IntResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*gatewayProto.IdArg) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSize provides a mock function with given fields: userId
func (_m *PlaylistAgent) GetSize(userId *gatewayProto.IdArg) (*gatewayProto.IntResponse, error) {
	ret := _m.Called(userId)

	var r0 *gatewayProto.IntResponse
	if rf, ok := ret.Get(0).(func(*gatewayProto.IdArg) *gatewayProto.IntResponse); ok {
		r0 = rf(userId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gatewayProto.IntResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*gatewayProto.IdArg) error); ok {
		r1 = rf(userId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: _a0
func (_m *PlaylistAgent) Update(_a0 *playlistProto.UserIdPlaylistArg) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*playlistProto.UserIdPlaylistArg) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
