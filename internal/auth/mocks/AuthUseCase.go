// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	user_microservice_domain "github.com/go-park-mail-ru/2022_1_Wave/internal/microservices/user"
	mock "github.com/stretchr/testify/mock"
)

// AuthUseCase is an autogenerated mock type for the AuthUseCase type
type AuthUseCase struct {
	mock.Mock
}

// GetUnauthorizedSession provides a mock function with given fields:
func (_m *AuthUseCase) GetUnauthorizedSession() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IsAuthSession provides a mock function with given fields: sessionId
func (_m *AuthUseCase) IsAuthSession(sessionId string) bool {
	ret := _m.Called(sessionId)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(sessionId)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsSession provides a mock function with given fields: sessionId
func (_m *AuthUseCase) IsSession(sessionId string) bool {
	ret := _m.Called(sessionId)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(sessionId)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Login provides a mock function with given fields: login, password
func (_m *AuthUseCase) Login(login string, password string) (string, error) {
	ret := _m.Called(login, password)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(login, password)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(login, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Logout provides a mock function with given fields: sessionId
func (_m *AuthUseCase) Logout(sessionId string) error {
	ret := _m.Called(sessionId)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(sessionId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SignUp provides a mock function with given fields: user
func (_m *AuthUseCase) SignUp(user *user_microservice_domain.User) (string, error) {
	ret := _m.Called(user)

	var r0 string
	if rf, ok := ret.Get(0).(func(*user_microservice_domain.User) string); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*user_microservice_domain.User) error); ok {
		r1 = rf(user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
