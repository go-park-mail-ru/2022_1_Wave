version: "3.5"
networks:
  monitor-net:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}


services:
  web:
    image: nginx
    ports:
      - "80:80"
    working_dir: /var/www/wave/
    volumes:
      - ../../../2022_1_Wave:/var/www/wave/
#      - ../../../2022_1_Wave/public/build:/var/www/wave
      - ../../assets:/var/www/wave/assets
      - ../../config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - wave_music
      - pgadmin

  wave_music:
    tty: true
    image: mausved/wave_music_api_v1
    expose:
      - 5000
    working_dir: /var/www/service/
    entrypoint: ./entrypoint.sh
    volumes:
      - ../..:/var/www/service
      - ./.air.toml:/var/www/service/.air.toml:ro
      - ../../config/config.toml:/var/www/service/config.toml:ro
    environment:
      - DATABASE_CONNECTION=user=postgres password=music dbname=wave host=db port=5432 sslmode=disable
      - DATABASE_MIGRATIONS=./db/migrations
    depends_on:
      - db
      - redis

  redis:
    image: redis
    ports:
      - '6379:6379'

  db:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=music
      - POSTGRES_DB=wave
    ports:
      - "5432:5432"
    expose:
      - 5432
    volumes:
      - ../../db/:/var/run/postgresql/

  node_exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    labels:
      org.label-schema.group: "monitoring"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ../../metrics/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - wave_music
    expose:
      - 9090
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ../../metrics/grafana/provisioning:/etc/grafana/provisioning
      - ../../metrics/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3000:3000"
    labels:
      org.label-schema.group: "monitoring"
    depends_on:
      - prometheus

#  caddy:
#    image: caddy
#    container_name: caddy
#    ports:
#      - "3000:3000"
#      - "9090:9090"
#      - "9093:9093"
#      - "9091:9091"
#    volumes:
#     - ../../metrics/caddy:/etc/caddy
#    environment:
#      - ADMIN_USER=${ADMIN_USER}
#      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
#    restart: unless-stopped
#    networks:
#      - monitor-net
#    labels:
#      org.label-schema.group: "monitoring"

  test_db:
    image: postgres:14
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=test
    ports:
      - "5500:5432"

  pgadmin:
    hostname: pgadmin
    image: dpage/pgadmin4:6
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root


