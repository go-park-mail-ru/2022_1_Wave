version: "3.5"

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  web:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    working_dir: /var/www/wave/
    volumes:
      - ../../assets:/var/www/wave/assets
      - ../../config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../../../front/2022_1_Wave/build:/var/www/wave
    depends_on:
      - wave_music
#      - websocket_server

  #  nginx-exporter:
  #    image: nginx/nginx-prometheus-exporter
  #    container_name: nginx-exporter
  #    environment:
  #      - SCRAPE_URI=http://web:80/metrics
  #      - TELEMETRY_PATH=/metrics
  #      - NGINX_RETRIES=1
  #      - ADMIN_USER=${ADMIN_USER}
  #      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
  #    expose:
  #      - 9113
  #    depends_on:
  #      - web

  wave_music:
    image: mausved/wave_music_api_v1
    container_name: api
    tty: true
    restart: always
    expose:
      - 5000
    working_dir: /var/www/service
    entrypoint: ./cmd/api/run.sh
    volumes:
      - ../..:/var/www/service
      - ./airs/api.toml:/var/www/service/cmd/api/.air.toml:ro
      - ../../config/config.toml:/var/www/service/config.toml:ro
    depends_on:
      - track
      - album
      - artist
      - playlist
      - auth
      - user
  #      - linker

  album:
    container_name: album
    image: mausved/wave_music_api_v1
    working_dir: /var/www/service
    restart: always
    environment:
      - dbType=postgres
      - port=:8081
      - exporterPort=:9081
      - DATABASE_CONNECTION=user=postgres password=music dbname=wave host=postgres port=5432 sslmode=disable
    expose:
      - 8081
      - 9081
    entrypoint: ./cmd/album/run.sh
    volumes:
      - ./airs/album.toml:/var/www/service/cmd/album/.air.toml:ro
      - ../..:/var/www/service
    depends_on:
      - db

  artist:
    container_name: artist
    image: mausved/wave_music_api_v1
    working_dir: /var/www/service
    restart: always
    environment:
      - dbType=postgres
      - port=:8082
      - exporterPort=:9082
      - DATABASE_CONNECTION=user=postgres password=music dbname=wave host=postgres port=5432 sslmode=disable
    expose:
      - 8082
      - 9082
    entrypoint: ./cmd/artist/run.sh
    volumes:
      - ./airs/artist.toml:/var/www/service/cmd/artist/.air.toml:ro
      - ../..:/var/www/service
    depends_on:
      - db

  track:
    container_name: track
    image: mausved/wave_music_api_v1
    working_dir: /var/www/service
    restart: always
    environment:
      - dbType=postgres
      - port=:8083
      - exporterPort=:9083
      - DATABASE_CONNECTION=user=postgres password=music dbname=wave host=postgres port=5432 sslmode=disable
    expose:
      - 8083
      - 9083
    entrypoint: ./cmd/track/run.sh
    volumes:
      - ./airs/track.toml:/var/www/service/cmd/track/.air.toml:ro
      - ../..:/var/www/service
    depends_on:
      - db

  playlist:
    container_name: playlist
    image: mausved/wave_music_api_v1
    working_dir: /var/www/service
    restart: always
    environment:
      - dbType=postgres
      - port=:8084
      - exporterPort=:9084
      - DATABASE_CONNECTION=user=postgres password=music dbname=wave host=postgres port=5432 sslmode=disable
    expose:
      - 8084
      - 9084
    entrypoint: ./cmd/playlist/run.sh
    volumes:
      - ./airs/playlist.toml:/var/www/service/cmd/playlist/.air.toml:ro
      - ../..:/var/www/service
    depends_on:
      - db

  auth:
    container_name: auth
    image: mausved/wave_music_api_v1
    working_dir: /var/www/service
    restart: always
    environment:
      - dbType=redis
      - port=:8085
      - exporterPort=:9085
      - DATABASE_CONNECTION=user=postgres password=music dbname=wave host=postgres port=5432 sslmode=disable
    expose:
      - 8085
      - 9085
    entrypoint: ./cmd/auth/run.sh
    volumes:
      - ./airs/auth.toml:/var/www/service/cmd/auth/.air.toml:ro
      - ../..:/var/www/service
    depends_on:
      - db
      - redis

  user:
    container_name: user
    image: mausved/wave_music_api_v1
    working_dir: /var/www/service
    restart: always
    environment:
      - dbType=postgres
      - port=:8086
      - exporterPort=:9086
      - DATABASE_CONNECTION=user=postgres password=music dbname=wave host=postgres port=5432 sslmode=disable
    expose:
      - 8086
      - 9086
    entrypoint: ./cmd/user/run.sh
    volumes:
      - ./airs/user.toml:/var/www/service/cmd/user/.air.toml:ro
      - ../..:/var/www/service
    depends_on:
      - db
      - redis

  #  linker:
  #    container_name: linker
  #    image: mausved/wave_music_api_v1
  #    working_dir: /var/www/service
  #    restart: always
  #    environment:
  #      - dbType=mongo
  #      - port=:8087
  #      - exporterPort=:9087
  #      - ME_CONFIG_MONGODB_ADMINUSERNAME=wave
  #      - ME_CONFIG_MONGODB_ADMINPASSWORD=wave
  #      - ME_CONFIG_MONGODB_URL=mongodb://77.223.123.188:27017
  #    expose:
  #      - 8087
  #      - 9087
  #    entrypoint: ./cmd/linker/run.sh
  #    volumes:
  #      - ./airs/linker.toml:/var/www/service/cmd/linker/.air.toml:ro
  #      - ../..:/var/www/service
  #    depends_on:
  #      - mongo

  #  mongo:
  #    image: mongo
  #    container_name: mongo
  #    restart: always
  #    #    environment:
  #    #      - MONGO_INITDB_ROOT_USERNAME=wave
  #    #      - MONGO_INITDB_ROOT_PASSWORD=wave
  #    expose:
  #      - 27017

  #  websocket_server:
  #    image: mausved/wave_music_api_v1:latest
  #    container_name: websocket_server
  #    working_dir: /websocket-server
  #    environment:
  #      - REDIS_ADDR=redis:6379
  #      - AUTH_GRPC_ADDR=auth:8085
  #    expose:
  #      - 6789
  #    entrypoint: ./websocket-server/cmd/run.sh
  #    volumes:
  #      - ../..:/websocket-server
  #    depends_on:
  #      - redis
  #      - auth

  redis:
    image: redis
    container_name: redis
    restart: always
    expose:
      - 6379

  db:
    image: mausved/wave_postgres
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=music
      - POSTGRES_DB=wave
    ports:
      - "5432:5432"
    expose:
      - 5432
    #    volumes:
    #      - data:/var/lib/postgresql/data

#  redis-exporter:
#    image: oliver006/redis_exporter:alpine
#    container_name: redis-exporter
#    restart: unless-stopped
#    command: [ "--redis.addr", "redis://redis:6379" ]
#    environment:
#      - ADMIN_USER=${ADMIN_USER}
#      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
#    expose:
#      - 9121
#    depends_on:
#      - redis
#
#  postgres-exporter:
#    image: wrouesnel/postgres_exporter
#    container_name: postgres-exporter
#    environment:
#      - DATA_SOURCE_NAME=postgresql://postgres:music@db:5432/wave?sslmode=disable
#      - USER
#      - ADMIN_USER=${ADMIN_USER}
#      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
#    expose:
#      - 9187
#    depends_on:
#      - db

#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    volumes:
#      - ../../metrics/prometheus:/etc/prometheus
#      - prometheus_data:/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#      - '--web.console.libraries=/etc/prometheus/console_libraries'
#      - '--web.console.templates=/etc/prometheus/consoles'
#      - '--storage.tsdb.retention.time=200h'
#      - '--web.enable-lifecycle'
#      - '--web.external-url=/monitoring/prometheus/'
#      - '--web.route-prefix=/monitoring/prometheus/'
#    restart: unless-stopped
#    depends_on:
#      - pushgateway
#      - nodeexporter
#      - redis-exporter
#      - nginx-exporter
#      - postgres-exporter
#      - alertmanager
#      - cadvisor
#      - wave_music
#    expose:
#      - 9090

#  alertmanager:
#    image: prom/alertmanager
#    container_name: alertmanager
#    volumes:
#      - ../../metrics/alertmanager:/etc/alertmanager
#    command:
#      - '--config.file=/etc/alertmanager/config.yml'
#      - '--storage.path=/alertmanager'
#    restart: unless-stopped
#    expose:
#      - 9093

#  nodeexporter:
#    image: prom/node-exporter
#    container_name: nodeexporter
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    command:
#      - '--path.procfs=/host/proc'
#      - '--path.rootfs=/rootfs'
#      - '--path.sysfs=/host/sys'
#      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
#    restart: unless-stopped
#    expose:
#      - 9100

#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor
#    container_name: cadvisor
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker:/var/lib/docker:ro
#      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
#    restart: unless-stopped
#    expose:
#      - 8080

#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    volumes:
#      - grafana_data:/var/lib/grafana
#      - ../../metrics/grafana/grafana.ini:/etc/grafana/grafana.ini
#      - ../../metrics/grafana/provisioning:/etc/grafana/provisioning
#    environment:
#      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
#      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
#      - GF_USERS_ALLOW_SIGN_UP=false
#      - ADMIN_USER=${ADMIN_USER}
#      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
#    restart: unless-stopped
#    expose:
#      - 3000
#
#  pushgateway:
#    image: prom/pushgateway
#    container_name: pushgateway
#    restart: unless-stopped
#    expose:
#      - 9091

#  caddy:
#    image: caddy
#    container_name: caddy
#    expose:
#      - "3000"
#      - "9090"
#      - "9113"
#    ports:
#      - "9093:9093"
#      - "9091:9091"
#      - "9121:9121"
#    volumes:
#      - ../../metrics/caddy:/etc/caddy
#    environment:
#      - ADMIN_USER=${ADMIN_USER}
#      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
#    restart: unless-stopped
#    depends_on:
#      - prometheus
