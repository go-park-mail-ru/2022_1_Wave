name: Checks
on: [ push ]
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - uses: actions/checkout@v3
      - run: sudo apt-get update
      - run: sudo apt-get install -y protobuf-compiler
      - run: sudo apt-get install -y golang-goprotobuf-dev
      - run: go install github.com/swaggo/swag/cmd/swag@latest
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - run: go install github.com/favadi/protoc-go-inject-tag@latest
      - run: go install github.com/vektra/mockery/v2@latest
      - uses: actions/checkout@v3
      - name: generate gRPC and docs
        run: chmod +x generateAll.sh && bash ./generateAll.sh
      - name: generate easyjson
        run: chmod +x easyjsonGenerate.sh && bash ./easyjsonGenerate.sh
      - name: generate test mocks
        run: cd internal/test && chmod +x mocks.sh && bash ./mocks.sh
      - name: build
        run: go build -v ./...

  golangci-lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - uses: actions/checkout@v3
      - run: sudo apt-get update
      - run: sudo apt-get install -y protobuf-compiler
      - run: sudo apt-get install -y golang-goprotobuf-dev
      - run: go install github.com/swaggo/swag/cmd/swag@latest
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - run: go install github.com/favadi/protoc-go-inject-tag@latest
      - run: go install github.com/vektra/mockery/v2@latest
      - name: generate gRPC and docs
        run: chmod +x generateAll.sh && bash ./generateAll.sh
      - name: generate easyjson
        run: chmod +x easyjsonGenerate.sh && bash ./easyjsonGenerate.sh
      - name: generate test mocks
        run: cd internal/test && chmod +x mocks.sh && bash ./mocks.sh
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          skip-pkg-cache: true
          skip-build-cache: true

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - uses: actions/checkout@v3
      - run: sudo apt-get update
      - run: sudo apt-get install -y protobuf-compiler
      - run: sudo apt-get install -y golang-goprotobuf-dev
      - run: go install github.com/swaggo/swag/cmd/swag@latest
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - run: go install github.com/favadi/protoc-go-inject-tag@latest
      - run: go install github.com/vektra/mockery/v2@latest
      - name: generate gRPC and docs
        run: chmod +x generateAll.sh && bash ./generateAll.sh
      - name: generate easyjson
        run: chmod +x easyjsonGenerate.sh && bash ./easyjsonGenerate.sh
      - name: generate test mocks
        run: cd internal/test && chmod +x mocks.sh && bash ./mocks.sh
      - name: go tests
        run: chmod +x test.sh && bash test.sh
