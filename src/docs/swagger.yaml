definitions:
  forms.Result:
    properties:
      error:
        example: some error note
        type: string
      result:
        example: some success note
        type: string
      status:
        example: OK
        type: string
    type: object
  forms.User:
    properties:
      email:
        example: hello@example.com
        type: string
      id:
        example: 5125112
        type: integer
      password:
        example: 1fsgh2rfafas
        type: string
      username:
        example: Martin
        type: string
    type: object
  models.Album:
    properties:
      Date:
        example: 0
        type: integer
      authorId:
        example: 121
        type: integer
      countLikes:
        example: 54
        type: integer
      countListening:
        example: 15632
        type: integer
      coverId:
        example: 254
        type: integer
      id:
        example: 777
        type: integer
      title:
        example: Mercury
        type: string
    type: object
  models.Artist:
    properties:
      countFollowers:
        example: 1001
        type: integer
      countListening:
        example: 7654
        type: integer
      id:
        example: 43
        type: integer
      name:
        example: Imagine Dragons
        type: string
      photo:
        example: /public/artists/photo/imagineDragons.png
        type: string
    type: object
  models.Song:
    properties:
      albumId:
        example: 143
        type: integer
      authorId:
        example: 121
        type: integer
      countLikes:
        example: 54
        type: integer
      countListening:
        example: 15632
        type: integer
      duration:
        example: 180
        type: integer
      id:
        example: 777
        type: integer
      mp4:
        example: /public/songs/mp4/track1.mp4
        type: string
      title:
        example: Rain
        type: string
    type: object
  utils.Error:
    properties:
      err:
        type: string
    type: object
  utils.Success:
    properties:
      result:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/albums/:
    get:
      consumes:
      - application/json
      description: getting all albums
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: GetAlbums
      tags:
      - album
    post:
      consumes:
      - application/json
      description: creating new album
      parameters:
      - description: params of new album. Id will be set automatically.
        in: body
        name: Album
        required: true
        schema:
          $ref: '#/definitions/models.Album'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: CreateAlbum
      tags:
      - album
    put:
      consumes:
      - application/json
      description: updating album by id
      parameters:
      - description: id of updating album and params of it.
        in: body
        name: Album
        required: true
        schema:
          $ref: '#/definitions/models.Album'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: UpdateAlbum
      tags:
      - album
  /api/v1/albums/{id}:
    delete:
      consumes:
      - application/json
      description: deleting album by id
      parameters:
      - description: id of album which need to be deleted
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: DeleteAlbum
      tags:
      - album
    get:
      consumes:
      - application/json
      description: getting album by id
      parameters:
      - description: id of album which need to be getted
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Album'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: GetAlbum
      tags:
      - album
  /api/v1/albums/popular:
    get:
      consumes:
      - application/json
      description: getting top20 popular albums
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: GetPopularAlbums
      tags:
      - album
  /api/v1/artists/:
    get:
      consumes:
      - application/json
      description: getting all artists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: GetArtists
      tags:
      - artist
    post:
      consumes:
      - application/json
      description: creating new artist
      parameters:
      - description: params of new artist. Id will be set automatically.
        in: body
        name: Artist
        required: true
        schema:
          $ref: '#/definitions/models.Artist'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: CreateArtist
      tags:
      - artist
    put:
      consumes:
      - application/json
      description: updating artist by id
      parameters:
      - description: id of updating artist and params of it.
        in: body
        name: Artist
        required: true
        schema:
          $ref: '#/definitions/models.Artist'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: UpdateArtist
      tags:
      - artist
  /api/v1/artists/{id}:
    delete:
      consumes:
      - application/json
      description: deleting artist by id
      parameters:
      - description: id of artist which need to be deleted
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: DeleteArtist
      tags:
      - artist
    get:
      consumes:
      - application/json
      description: getting artist by id
      parameters:
      - description: id of artist which need to be getted
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Artist'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: GetArtist
      tags:
      - artist
  /api/v1/artists/popular:
    get:
      consumes:
      - application/json
      description: getting top20top20 popular artists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: GetPopularArtists
      tags:
      - artist
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: user params
        in: body
        name: UserForm
        required: true
        schema:
          $ref: '#/definitions/forms.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forms.Result'
        "400":
          description: invalid login or password
          schema:
            $ref: '#/definitions/forms.Result'
        "401":
          description: invalid csrf
          schema:
            $ref: '#/definitions/forms.Result'
      summary: Login
      tags:
      - auth
  /api/v1/logout:
    post:
      consumes:
      - application/json
      description: sign in user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forms.Result'
        "401":
          description: invalid csrf
          schema:
            $ref: '#/definitions/forms.Result'
        "460":
          description: Data is invalid
          schema:
            $ref: '#/definitions/forms.Result'
        "521":
          description: Cannot create session
          schema:
            $ref: '#/definitions/forms.Result'
      summary: Logout
      tags:
      - auth
  /api/v1/signup:
    post:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: new jwt data
        in: body
        name: UserForm
        required: true
        schema:
          $ref: '#/definitions/forms.User'
      produces:
      - application/json
      responses:
        "200":
          description: success signup
          schema:
            $ref: '#/definitions/forms.Result'
        "400":
          description: user already exist
          schema:
            $ref: '#/definitions/forms.Result'
        "401":
          description: invalid csrf
          schema:
            $ref: '#/definitions/forms.Result'
      summary: SignUp
      tags:
      - auth
  /api/v1/songs/:
    get:
      consumes:
      - application/json
      description: getting all songs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: GetSongs
      tags:
      - song
    post:
      consumes:
      - application/json
      description: creating new song
      parameters:
      - description: params of new song. Id will be set automatically.
        in: body
        name: Song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: CreateSong
      tags:
      - song
    put:
      consumes:
      - application/json
      description: updating song by id
      parameters:
      - description: id of updating song and params of it.
        in: body
        name: Song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: UpdateSong
      tags:
      - song
  /api/v1/songs/{id}:
    delete:
      consumes:
      - application/json
      description: deleting song by id
      parameters:
      - description: id of song which need to be deleted
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: DeleteSong
      tags:
      - song
    get:
      consumes:
      - application/json
      description: getting song by id
      parameters:
      - description: id of song which need to be getted
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: GetSong
      tags:
      - song
  /api/v1/songs/popular:
    get:
      consumes:
      - application/json
      description: getting top20 popular songs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Success'
        "400":
          description: Data is invalid
          schema:
            $ref: '#/definitions/utils.Error'
        "405":
          description: Method is not allowed
          schema:
            $ref: '#/definitions/utils.Error'
      summary: GetPopularSongs
      tags:
      - song
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: get user by cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forms.User'
        "400":
          description: invalid id
          schema:
            $ref: '#/definitions/forms.Result'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/forms.Result'
      summary: GetUser
      tags:
      - user
  /api/v1/users/self:
    get:
      consumes:
      - application/json
      description: get user
      parameters:
      - description: id of user which need to be getted
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forms.User'
        "401":
          description: invalid csrf
          schema:
            $ref: '#/definitions/forms.Result'
      summary: GetSelfUser
      tags:
      - user
swagger: "2.0"
