{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/albumCovers/": {
            "get": {
                "description": "getting all albums cover",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albumCover"
                ],
                "summary": "GetAll",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "updating album cover by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albumCover"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "description": "id of updating album cover and params of it.",
                        "name": "AlbumCover",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AlbumCover"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "creating new albumCover",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albumCover"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "params of new album cover. Id will be set automatically.",
                        "name": "Album",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AlbumCover"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/albumCovers/{id}": {
            "get": {
                "description": "getting album cover by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albumCover"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of album cover which need to be getted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AlbumCover"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "deleting album cover by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albumCover"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of album cover which need to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/albums/": {
            "get": {
                "description": "getting all albums",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "album"
                ],
                "summary": "GetAll",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "updating album by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "album"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "description": "id of updating album and params of it.",
                        "name": "Album",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Album"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "creating new album",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "album"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "params of new album. Id will be set automatically.",
                        "name": "Album",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Album"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/albums/popular": {
            "get": {
                "description": "getting top20 popular albums",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "album"
                ],
                "summary": "GetPopular",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/albums/{id}": {
            "get": {
                "description": "getting album by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "album"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of album which need to be getted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Album"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "deleting album by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "album"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of album which need to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/artists/": {
            "get": {
                "description": "getting all artists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artist"
                ],
                "summary": "GetAll",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "updating artist by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artist"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "description": "id of updating artist and params of it.",
                        "name": "Artist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Artist"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "creating new artist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artist"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "params of new artist. Id will be set automatically.",
                        "name": "Artist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Artist"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/artists/popular": {
            "get": {
                "description": "getting top20 popular artists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artist"
                ],
                "summary": "GetPopular",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/artists/{id}": {
            "get": {
                "description": "getting artist by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artist"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of artist which need to be getted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Artist"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "deleting artist by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artist"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of artist which need to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/get_csrf/": {
            "post": {
                "description": "Exposes a csrf token and creates an unauthorized session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Getting csrf",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/login/": {
            "post": {
                "description": "login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "username/email and password",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "invalid login or password",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "422": {
                        "description": "invalid json",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/logout/": {
            "post": {
                "description": "logout user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    }
                }
            }
        },
        "/api/v1/signup/": {
            "post": {
                "description": "Sign up user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Signup",
                "parameters": [
                    {
                        "description": "Username, Email, Password required",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "invalid sign up",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "422": {
                        "description": "invalid json",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/tracks/": {
            "get": {
                "description": "getting all tracks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "GetAll",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "updating track by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "description": "id of updating track and params of it.",
                        "name": "Track",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Track"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "creating new track",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "params of new track. Id will be set automatically.",
                        "name": "Track",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Track"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/tracks/popular": {
            "get": {
                "description": "getting top20 popular tracks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "GetPopular",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/tracks/{id}": {
            "get": {
                "description": "getting track by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of track which need to be getted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Track"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "deleting track by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of track which need to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/users/": {
            "put": {
                "description": "updating user by session_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "invalid field values",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "401": {
                        "description": "user unauthorized",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "422": {
                        "description": "invalid json",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/users/self": {
            "get": {
                "description": "getting user by session_id (in cookie)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "401": {
                        "description": "User unauthorized",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/users/upload_avatar/": {
            "put": {
                "description": "updating user avatar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "invalid field values",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "description": "getting user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of user which need to be getted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                            "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Album": {
            "type": "object",
            "properties": {
                "artistId": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 4
                },
                "countLikes": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 54
                },
                "countListening": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 15632
                },
                "date": {
                    "type": "integer",
                    "example": 0
                },
                "id": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 8
                },
                "title": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "Mercury"
                }
            }
        },
        "domain.AlbumCover": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 1
                },
                "isDark": {
                    "type": "boolean",
                    "example": true
                },
                "quote": {
                    "description": "Title  string `json:\"title\" example:\"Mercury\" db:\"title\" validate:\"max=256,nonnil\"`",
                    "type": "string",
                    "maxLength": 512,
                    "example": "some phrases"
                }
            }
        },
        "domain.Artist": {
            "type": "object",
            "properties": {
                "countFollowers": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 1001
                },
                "countListening": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 7654
                },
                "id": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 6
                },
                "name": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "Imagine Dragons"
                }
            }
        },
        "domain.Track": {
            "type": "object",
            "properties": {
                "albumId": {
                    "description": "AlbumId is uint64 but for null holder this is type interface"
                },
                "artistId": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 8
                },
                "countLikes": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 54
                },
                "countListening": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 15632
                },
                "duration": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 180
                },
                "id": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 4
                },
                "title": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "Rain"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "count_following": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 0
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "webUtils.Error": {
            "type": "object",
            "properties": {
                "err": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "webUtils.Success": {
            "type": "object",
            "properties": {
                "result": {},
                "status": {
                    "type": "string"
                }
            }
        }
    }
}