{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
      "/api/v1/albums/": {
        "get": {
          "description": "getting all albums",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "album"
          ],
          "summary": "GetAll",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/webUtils.Success"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        },
        "put": {
          "description": "updating album by id",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "album"
          ],
          "summary": "Update",
          "parameters": [
            {
              "description": "id of updating album and params of it.",
              "name": "Album",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/domain.Album"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/webUtils.Success"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        },
        "post": {
          "description": "creating new album",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "album"
          ],
          "summary": "Create",
          "parameters": [
            {
              "description": "params of new album. Id will be set automatically.",
              "name": "Album",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/domain.Album"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/webUtils.Success"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        }
      },
      "/api/v1/albums/popular": {
        "get": {
          "description": "getting top20 popular albums",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "album"
          ],
          "summary": "GetPopular",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/webUtils.Success"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        }
      },
      "/api/v1/albums/{id}": {
        "get": {
          "description": "getting album by id",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "album"
          ],
          "summary": "Get",
          "parameters": [
            {
              "type": "integer",
              "description": "id of album which need to be getted",
              "name": "id",
              "in": "path",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/domain.Album"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        },
        "delete": {
          "description": "deleting album by id",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "album"
          ],
          "summary": "Delete",
          "parameters": [
            {
              "type": "integer",
              "description": "id of album which need to be deleted",
              "name": "id",
              "in": "path",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/webUtils.Success"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        }
      },
      "/api/v1/artists/": {
        "get": {
          "description": "getting all artists",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "artist"
          ],
          "summary": "GetAll",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/webUtils.Success"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        },
        "put": {
          "description": "updating artist by id",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "artist"
          ],
          "summary": "Update",
          "parameters": [
            {
              "description": "id of updating artist and params of it.",
              "name": "Artist",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/domain.Artist"
              }
            }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                          "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                          "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                          "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "post": {
              "description": "creating new artist",
              "consumes": [
                "application/json"
              ],
              "produces": [
                "application/json"
              ],
              "tags": [
                "artist"
              ],
              "summary": "Create",
              "parameters": [
                {
                  "description": "params of new artist. Id will be set automatically.",
                  "name": "Artist",
                  "in": "body",
                  "required": true,
                  "schema": {
                    "$ref": "#/definitions/domain.Artist"
                  }
                }
                ],
                "responses": {
                  "200": {
                    "description": "OK",
                    "schema": {
                      "$ref": "#/definitions/webUtils.Success"
                    }
                  },
                  "400": {
                    "description": "Data is invalid",
                    "schema": {
                      "$ref": "#/definitions/webUtils.Error"
                    }
                  },
                  "405": {
                    "description": "Method is not allowed",
                    "schema": {
                      "$ref": "#/definitions/webUtils.Error"
                    }
                  }
                }
            }
      },
      "/api/v1/artists/popular": {
        "get": {
          "description": "getting top20 popular artists",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "artist"
          ],
          "summary": "GetPopular",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/webUtils.Success"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        }
      },
      "/api/v1/artists/{id}": {
        "get": {
          "description": "getting artist by id",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "artist"
          ],
          "summary": "Get",
          "parameters": [
            {
              "type": "integer",
              "description": "id of artist which need to be getted",
              "name": "id",
              "in": "path",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/domain.Artist"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        },
        "delete": {
          "description": "deleting artist by id",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "artist"
          ],
          "summary": "Delete",
          "parameters": [
            {
              "type": "integer",
              "description": "id of artist which need to be deleted",
              "name": "id",
              "in": "path",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/webUtils.Success"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        }
      },
      "/api/v1/tracks/": {
        "get": {
          "description": "getting all tracks",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "track"
          ],
          "summary": "GetAll",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/webUtils.Success"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        },
        "put": {
          "description": "updating track by id",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "track"
          ],
          "summary": "Update",
          "parameters": [
            {
              "description": "id of updating track and params of it.",
              "name": "Track",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/domain.Track"
              }
            }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                          "$ref": "#/definitions/webUtils.Success"
                        }
                    },
                    "400": {
                        "description": "Data is invalid",
                        "schema": {
                          "$ref": "#/definitions/webUtils.Error"
                        }
                    },
                    "405": {
                        "description": "Method is not allowed",
                        "schema": {
                          "$ref": "#/definitions/webUtils.Error"
                        }
                    }
                }
            },
            "post": {
              "description": "creating new track",
              "consumes": [
                "application/json"
              ],
              "produces": [
                "application/json"
              ],
              "tags": [
                "track"
              ],
              "summary": "Create",
              "parameters": [
                {
                  "description": "params of new track. Id will be set automatically.",
                  "name": "Track",
                  "in": "body",
                  "required": true,
                  "schema": {
                    "$ref": "#/definitions/domain.Track"
                  }
                }
                ],
                "responses": {
                  "200": {
                    "description": "OK",
                    "schema": {
                      "$ref": "#/definitions/webUtils.Success"
                    }
                  },
                  "400": {
                    "description": "Data is invalid",
                    "schema": {
                      "$ref": "#/definitions/webUtils.Error"
                    }
                  },
                  "405": {
                    "description": "Method is not allowed",
                    "schema": {
                      "$ref": "#/definitions/webUtils.Error"
                    }
                  }
                }
            }
      },
      "/api/v1/tracks/popular": {
        "get": {
          "description": "getting top20 popular tracks",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "track"
          ],
          "summary": "GetPopular",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/webUtils.Success"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        }
      },
      "/api/v1/tracks/{id}": {
        "get": {
          "description": "getting track by id",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "track"
          ],
          "summary": "Get",
          "parameters": [
            {
              "type": "integer",
              "description": "id of track which need to be getted",
              "name": "id",
              "in": "path",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/domain.Track"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        },
        "delete": {
          "description": "deleting track by id",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "track"
          ],
          "summary": "Delete",
          "parameters": [
            {
              "type": "integer",
              "description": "id of track which need to be deleted",
              "name": "id",
              "in": "path",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/webUtils.Success"
              }
            },
            "400": {
              "description": "Data is invalid",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            },
            "405": {
              "description": "Method is not allowed",
              "schema": {
                "$ref": "#/definitions/webUtils.Error"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "domain.Album": {
        "type": "object",
        "properties": {
          "authorId": {
            "type": "integer",
            "example": 4
          },
          "countLikes": {
            "type": "integer",
            "example": 54
          },
          "countListening": {
            "type": "integer",
            "example": 15632
          },
          "coverId": {
            "type": "integer",
            "example": 8
          },
          "date": {
            "type": "integer",
            "example": 0
          },
          "id": {
            "type": "integer",
            "example": 8
          },
          "title": {
            "type": "string",
            "example": "Mercury"
          }
        }
        },
      "domain.Artist": {
        "type": "object",
        "properties": {
          "countFollowers": {
            "type": "integer",
            "example": 1001
          },
          "countListening": {
            "type": "integer",
            "example": 7654
          },
                "id": {
                    "type": "integer",
                    "example": 43
                },
                "name": {
                    "type": "string",
                    "example": "Imagine Dragons"
                },
                "photo": {
                    "type": "string",
                    "example": "assets/artist_1.png"
                }
            }
        },
      "domain.Track": {
        "type": "object",
        "properties": {
          "albumId": {
            "type": "integer",
            "example": 6
          },
          "authorId": {
            "type": "integer",
            "example": 8
          },
                "countLikes": {
                    "type": "integer",
                    "example": 54
                },
                "countListening": {
                    "type": "integer",
                    "example": 15632
                },
                "coverId": {
                    "type": "integer",
                  "example": 4
                },
          "duration": {
            "type": "integer",
            "example": 180
          },
          "id": {
            "type": "integer",
            "example": 4
          },
          "mp4": {
            "type": "string",
            "example": "assets/track_1.mp4"
          },
          "title": {
            "type": "string",
            "example": "Rain"
          }
        }
      },
      "webUtils.Error": {
        "type": "object",
        "properties": {
          "err": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "webUtils.Success": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "string"
          }
        }
      }
    }
}